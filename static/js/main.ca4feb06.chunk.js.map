{"version":3,"sources":["redux/dialogs-reducer.js","components/common/Preloader/Preloader.module.css","assets/images/load.gif","components/Users/Users.module.css","components/Profile/Profile.module.css","components/Sidebar/LatestComments.module.css","utils/validation/validation.js","components/common/ValidationForms/ValidationForms.module.css","api/api.js","redux/profile-reducer.js","redux/navigation-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/news-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContain.jsx","components/common/Preloader/Preloader.jsx","components/Navigation/BestFriends.jsx","components/Navigation/Navigation.jsx","components/Navigation/NavigationContain.jsx","components/Users/Users.jsx","components/Users/User/User.jsx","components/common/Pagination/Pagination.jsx","redux/users-selectors.js","components/Users/UsersContain.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContain.jsx","components/Profile/ProfileInfo/Status/StatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContain.jsx","components/Login/LoginContain.jsx","components/Sidebar/Commentary/Commentary.jsx","components/Sidebar/LatestComments.jsx","components/News/News/News.jsx","components/News/NewsListContain.jsx","App.js","serviceWorker.js","index.js","components/Navigation/Navigation.module.css","components/Users/User/User.module.css","components/common/ValidationForms/ValidationForms.jsx","components/Profile/Posts/Post/Post.module.css","components/News/News/News.module.css","components/common/Pagination/Pagination.module.css","components/Profile/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/Login.module.css","hoc/withAuthRedirect.js","components/Header/Header.module.css","components/Navigation/BestFriends.module.css"],"names":["initialDialogsReducer","messagesData","id","text","time","dialogsList","name","newMessageText","sendMessageCreator","newMessage","type","dialogsReducer","state","action","newMessageValue","module","exports","required","value","undefined","maxLengthCreator","maxLength","length","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","data","getFirstThreeUsers","followUser","post","unFollowUser","delete","getUserProfile","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","ADD_POST","initialProfilePage","postsData","message","newPostText","profile","setUserProfile","setUserStatus","setUserProfileThunk","userId","dispatch","a","getUserStatusThunk","profileReducer","newPost","newPostTextValue","filter","postId","initialNavigation","navigationReducer","initialUsers","users","firstThreeUsers","totalUsersCount","isFetching","followingInProgress","displayingUsers","currentProfile","followUnfollowFlow","apiMethod","actionCreator","toggleFollowingInProgress","resultCode","follow","userID","unfollow","setUsers","setFirstThreeUsers","setCurrentPage","page","setTotalUsers","totalUsers","setIsFetching","usersReducer","map","u","followed","log","initialState","login","isAuth","setAuthUserDataThunk","setAuthUserData","authReducer","initialized","appReducer","initialNewsPage","newsData","newsName","newsImage","date","newsText","newsReducer","news","reducers","combineReducers","profilePage","dialogsPage","navigation","usersPage","newsPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Header","props","className","styles","header","userData","onClick","logout","button_logout","to","HeaderAPIComponent","this","React","Component","HeaderContain","connect","Preloader","preloader","src","load","BestFriendsContain","style","bestfriends","bestFriends","bestfriends_persons","BestFriendsWithRouter","withRouter","Navigation","classes","nav","activeClassName","active","NavigationContain","items","Users","usersList","User","user","user__image","user__image__avatar","image","alt","disabled","some","button","button_unfollow","unFollowThunk","button_follow","followThunk","user__body","key","Pagination","pagesCount","Math","ceil","totalCount","pages","i","push","pagesLength","numberOfParts","displayingElelements","useState","leftBorder","setLeftBorder","rightBorder","setRightBorder","pagesPart","setPagesPart","pagination","onPageChanged","slice","e","activePage","getAllUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","UsersContain","bind","Post","post_wrapper","like","dislike","maxLengthCreatorValidate","AddNewPostReduxForm","reduxForm","Form","onSubmit","handleSubmit","Field","rows","validate","posts__textarea","Textarea","send","Posts","postsElements","userName","values","addPost","sendNewPostTextAreaValue","PostsContain","addPostCreator","Status","stateWithSetState","editMode","setEditMode","setStatus","useEffect","onBlur","updateStatusThunk","onChange","currentTarget","autoFocus","onDoubleClick","ProfileInfo","profileInfo","photos","small","profileInfo__avatar","autorizedUserId","fullName","lookingForAJob","ProfileInfoWithRouter","Profile","profile__hero","ProfileContain","match","params","history","compose","withAuthRedirect","LoginReduxForm","error","loginForm","placeholder","component","Input","Object","keys","LoginContain","formData","login__name","notLogined","messages","stopSubmit","_error","Commentary","LatestComments","sidebar","AddNewsCommentaryReduxForm","news__commentary","News","news__name","newsDataToNewsComponent","news__date","NewsListContain","newsList","getNews","newsListToRender","DialogsContain","lazy","App","initializedApp","path","render","Suspense","fallback","promise","Promise","all","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","input","meta","child","touched","textarea","textarea_zeroValueError","textarea_maxLengthError","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.ca4feb06.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\nlet initialDialogsReducer = {\r\n        messagesData: \r\n        [\r\n        {id: 1, text: \"Love\",time: '4:20'},\r\n        {id: 2, text: \"Hate\",time: '4:20'},\r\n        {id: 3, text: \"Uptown\",time: '4:20'},\r\n        {id: 4, text: \"Shinin' like a diamond from an eagle to a pigeon\",time: '4:20'},\r\n        {id: 5, text: \"Bree\",time: '4:20'},\r\n        {id: 6, text: \"Love\",time: '4:20'},\r\n        {id: 7, text: \"Hate\",time: '4:20'},\r\n        {id: 8, text: \"Uptown\",time: '4:20'},\r\n        {id: 9, text: \"Shinin' like a diamond from an eagle to a pigeon\",time: '4:20'},\r\n        {id: 10, text: \"Bree\",time: '4:20'}\r\n    ],\r\n        dialogsList:\r\n    [\r\n        {id: 1, name: \"Lil Wayne\"},\r\n        {id: 2, name: \"Rick Ross\"},\r\n        {id: 3, name: \"Birdman\"},\r\n        {id: 4, name: \"Drake\"},\r\n        {id: 5, name: \"Dj Khaled\"},\r\n        {id: 6, name: \"Snopp Dogg\"},\r\n        {id: 7, name: \"Wiz Khalifa\"},\r\n        {id: 8, name: \"Swae Lee\"},\r\n        {id: 9, name: \"Slim Jxmmi\"},\r\n        {id: 10, name: \"Rick Rubin\"},\r\n    \r\n    ],\r\n    newMessageText: 'Введите текст сообщения'\r\n}\r\nexport const dialogsReducer = (state = initialDialogsReducer,action) => {\r\n    switch (action.type) {\r\n    case SEND_MESSAGE:\r\n          let newMessageValue = {\r\n              id: 12,\r\n              text: action.newMessage,\r\n              time: '4:20'\r\n          }\r\n          return({...state,\r\n          messagesData: [...state.messagesData,newMessageValue],\r\n          newMessageText: ''\r\n          })\r\n        default:\r\n            return state;\r\n      }\r\n}\r\nexport const sendMessageCreator = (newMessage) => ({type: SEND_MESSAGE,newMessage})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__LoeeJ\"};","module.exports = __webpack_public_path__ + \"static/media/load.cffa9d9d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Users_activePage__2WWve\",\"button_showMore\":\"Users_button_showMore__1S5xG\",\"pagination\":\"Users_pagination__aNssJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__hero\":\"Profile_profile__hero__1oL6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LatestComments_sidebar__3ShUj\"};","export const required = value => (value ? undefined : 'Required')\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value&&value.length > maxLength) return \"Max length error\"\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"ValidationForms_textarea__2nQQv\",\"textarea_zeroValueError\":\"ValidationForms_textarea_zeroValueError__3pA4V\",\"textarea_maxLengthError\":\"ValidationForms_textarea_maxLengthError__2z2id\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n        headers: {\r\n            \"API-KEY\":\"21610f45-f41d-4a91-be29-53d5519c640e\"\r\n        }\r\n    }\r\n)\r\nexport const usersAPI = {\r\n    getUsers(currentPage=1,pageSize=1) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(res=>\r\n            res.data)\r\n    \r\n    },\r\n    getFirstThreeUsers() {\r\n        return instance.get(`users?page=1&count=3`).then(res=>{\r\n            return res.data})\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`).then(res=>res.data)\r\n    },\r\n    unFollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(res=>res.data)\r\n    },\r\n    getUserProfile(id) {\r\n        console.warn('Use new method getProfile')\r\n        return profileAPI.getProfile(id)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`,{\r\n            status: status\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n        authMe() {\r\n        return instance.get(`auth/me`).then(res=>res.data)\r\n        },\r\n        login(email,password,rememberMe = false) {\r\n        return instance.post(`auth/login`,{email,password,rememberMe}).then(res=>res.data) \r\n        },\r\n        logout() {\r\n        return instance.delete(`auth/login`).then(res=>res.data) \r\n        }\r\n}\r\nexport default usersAPI","import usersAPI, {profileAPI} from '../api/api'\r\n\r\n\r\nconst ADD_POST = 'profile-reducer/ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'SET_USER_STATUS'\r\n\r\nlet initialProfilePage = {\r\n    postsData: [\r\n        {id: 1, message: \"Я на Бали\"},\r\n        {id: 2, message: \"Я на Багамах\"},\r\n        {id: 3, message: \"Я на Гаваях\"},\r\n        {id: 4, message: \"Я в Майами\"},\r\n        {id: 5, message: \"Я в Амстердаме\"}\r\n    ],\r\n    newPostText: 'Imma ride',\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst profileReducer = (state=initialProfilePage,action) => {\r\n    switch(action.type) { \r\n        case ADD_POST: \r\n            let newPost = {\r\n            id: 6,\r\n            message: action.newPostTextValue\r\n            }\r\n            return ({\r\n                ...state,\r\n                postsData: [...state.postsData,newPost],\r\n                newPostText: ''\r\n            })\r\n        case SET_USER_PROFILE:{\r\n        return({\r\n            ...state,\r\n            profile: action.profile\r\n        })}\r\n        case SET_USER_STATUS:{\r\n            return({\r\n                ...state,\r\n                status: action.status\r\n            })\r\n        }\r\n        case DELETE_POST: {\r\n\r\n            return({\r\n                ...state,\r\n                postsData: state.postsData.filter(post=>post.id!=action.postId)\r\n            })\r\n        } \r\n        default:\r\n            return state}}\r\n\r\n\r\n\r\nexport const addPostCreator = (newPostTextValue) => ({type: ADD_POST,newPostTextValue})\r\nexport const deletePostCreator = (postId) => ({type: DELETE_POST,postId})\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE,profile})\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\n\r\nexport const setUserProfileThunk = (userId) => async (dispatch) => {\r\n    let res = await usersAPI.getUserProfile(userId)    \r\n            dispatch(setUserProfile(res.data))}\r\n            \r\nexport const getUserStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(res=>{\r\n            dispatch(setUserStatus(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(\r\n        res => { if(res.data.resultCode===0){\r\n            dispatch(setUserStatus(status))\r\n        }}\r\n        )\r\n    }\r\n}\r\n\r\nexport default profileReducer;","let initialNavigation = {\r\n    messagesData: \r\n    [\r\n    {id: 1, text: \"Love\",time: '4:20'},\r\n    {id: 2, text: \"Hate\",time: '4:20'},\r\n    {id: 3, text: \"Uptown\",time: '4:20'},\r\n    {id: 4, text: \"Shinin' like a diamond from an eagle to a pigeon\",time: '4:20'},\r\n    {id: 5, text: \"Bree\",time: '4:20'},\r\n    {id: 6, text: \"Love\",time: '4:20'},\r\n    {id: 7, text: \"Hate\",time: '4:20'},\r\n    {id: 8, text: \"Uptown\",time: '4:20'},\r\n    {id: 9, text: \"Shinin' like a diamond from an eagle to a pigeon\",time: '4:20'},\r\n    {id: 10, text: \"Bree\",time: '4:20'}\r\n],\r\n    dialogsList:\r\n[\r\n    {id: 1, name: \"Lil Wayne\"},\r\n    {id: 2, name: \"Rick Ross\"},\r\n    {id: 3, name: \"Birdman\"},\r\n    {id: 4, name: \"Drake\"},\r\n    {id: 5, name: \"Dj Khaled\"},\r\n    {id: 6, name: \"Snopp Dogg\"},\r\n    {id: 7, name: \"Wiz Khalifa\"},\r\n    {id: 8, name: \"Swae Lee\"},\r\n    {id: 9, name: \"Slim Jxmmi\"},\r\n    {id: 10, name: \"Rick Rubin\"},\r\n\r\n],\r\nnewMessageText: 'Введите текст сообщения'\r\n}\r\nconst navigationReducer = (state=initialNavigation, action) => {\r\n    return state\r\n}\r\nexport default navigationReducer;","import usersAPI from '../api/api'\r\nimport {updateObjectsInArray} from '../utils/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nconst SET_FIRST_THREE_USERS = \"users-reducer/SET_FIRST_THREE_USERS\"\r\nconst SET_CURRENT_PROFILE = \"user-reducer/SET_CURRENT_PROFILE\"\r\n\r\nlet initialUsers = {\r\n        users:[],\r\n        firstThreeUsers: [],\r\n        pageSize: 3,\r\n        totalUsersCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: [],\r\n        displayingUsers: 10,\r\n        currentProfile: undefined,\r\n}\r\n\r\nexport const usersReducer = (state = initialUsers,action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:{\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if (u.id===action.userID){\r\n                        return ({...u, followed: true})\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            //users: updateObjectsInArray(state.users,'id',action.userID,{followed:true})\r\n        }\r\n        case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users: state.users.map(u=>{\r\n                        console.log(u)\r\n                        if (u.id===action.userID){\r\n                            return ({...u, followed: false})\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsers\r\n            }\r\n        case SET_IS_FETCHING: \r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userID]\r\n                : state.followingInProgress.filter(id=>id!=action.userID)\r\n            }\r\n        }\r\n        case SET_FIRST_THREE_USERS: {\r\n            return {\r\n                ...state,\r\n                firstThreeUsers: action.firstThreeUsers\r\n            }\r\n        }\r\n        case SET_CURRENT_PROFILE: {\r\n            return {\r\n                ...state,\r\n                currentProfile: action.currentProfile\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n      }\r\n}\r\n\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return async (dispatch) => {\r\n            dispatch(setIsFetching(true)) \r\n            dispatch(setCurrentPage(currentPage))\r\n            let data = await usersAPI.getUsers(currentPage,pageSize)\r\n            dispatch(setIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            data.totalCount>100?dispatch(setTotalUsers(100)):dispatch(setTotalUsers(data.totalCount))\r\n            console.log(data.items)\r\n}}\r\nexport const getFirstThreeUsers = () => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        let firstThreeUsers = await usersAPI.getFirstThreeUsers()\r\n        dispatch(setFirstThreeUsers(firstThreeUsers.items))\r\n        dispatch(setIsFetching(false))\r\n        \r\n    }\r\n}\r\nconst followUnfollowFlow = async (id, dispatch, apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true,id))\r\n    let res = await apiMethod(id)\r\n    if (res.resultCode==0) {\r\n        dispatch(actionCreator(id))\r\n        }\r\n        dispatch(toggleFollowingInProgress(false,id))}\r\n\r\n\r\nexport const unFollowThunk = (id) => (dispatch) =>{\r\n        let apiMethod = usersAPI.unFollowUser.bind(usersAPI)\r\n        let actionCreator = unfollow\r\n        followUnfollowFlow(id,dispatch,apiMethod,actionCreator)\r\n}\r\n\r\nexport const followThunk = (id) => \r\n        async (dispatch) =>{\r\n        dispatch(toggleFollowingInProgress(true,id))\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI)\r\n        let actionCreator = follow\r\n        let res = await usersAPI.followUser(id) \r\n    if (res.resultCode==0){\r\n        dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingInProgress(false,id))}\r\n\r\nexport const follow = (userID) => ({type: FOLLOW, userID})\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setFirstThreeUsers = (firstThreeUsers) => ({type: SET_FIRST_THREE_USERS, firstThreeUsers})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page})\r\nexport const setTotalUsers = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT,totalUsers})\r\nexport const setIsFetching = (isFetching) => ({type: SET_IS_FETCHING,isFetching})\r\nexport const toggleFollowingInProgress = (isFetching,userID) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS,isFetching,userID})\r\nexport const setCurrentProfile = (currentProfile) => ({type: SET_CURRENT_PROFILE,currentProfile})\r\n\r\nexport default usersReducer;","import {authAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\n\r\nlet initialState = {\r\n    email: null,\r\n    id: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nexport const authReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                //isAuth: true\r\n            } \r\n        }\r\n        default:\r\n            return state;\r\n      }\r\n}\r\n\r\nexport const setAuthUserDataThunk = () => async (dispatch) => {\r\n        let res = await authAPI.authMe()\r\n        if (res.resultCode===0) {\r\n                dispatch(setAuthUserData(res.data.email,res.data.id,res.data.login,true))}\r\n            }\r\nexport const setAuthUserData = (email,id,login,isAuth) => ({type: SET_AUTH_USER_DATA, data: {\r\n    email, id, login,isAuth}})\r\n\r\nexport const login = (email,password,rememberMe=true) => async (dispatch) => {\r\n    let res = await authAPI.login(email,password,rememberMe)\r\n    if (res.resultCode===0) {\r\n        dispatch(setAuthUserDataThunk())\r\n    }\r\n    else {\r\n        let message = res.messages.length>0?res.messages[0]:undefined\r\n        dispatch(stopSubmit('login',{_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.resultCode===0) {\r\n        dispatch(setAuthUserData(null,null,null,false))\r\n}}\r\nexport default authReducer;","import { setAuthUserDataThunk } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n   initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            } \r\n    }\r\n        default:\r\n            return state;\r\n      }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nexport const initializedApp = () => (dispatch) => {\r\n    let promise = dispatch(setAuthUserDataThunk())\r\n    Promise.all([promise]).then(()=>dispatch(initializedSuccess()) )\r\n   \r\n}\r\nexport default appReducer","const GET_NEWS = 'users-reducer/GET_NEWS';\r\n\r\nlet initialNewsPage = {\r\n\r\n    newsData: [\r\n        {id: 1, \r\n        newsName: \"Новый особняк стоимостью 25 млн$ был построен на 25 линии СНТ Дружба\",\r\n        newsImage: \"https://www.grekomania.ru/images/places/19/cyclades/santorini/big/88316_Famous-Santorini-sunset-3.jpg\",\r\n        date: \"28 июля\",\r\n        newsText: \"Роскошный особняк смотрится просто изумительно! Рядом с домом стоит множество суперкаров! В доме 8 спален, 5 ванных комнат. Роскошный особняк класса люкс принадлежит русскому бизнессмену!\"\r\n\r\n    },\r\n        {id: 2, newsName: \"Прощальный костер состоится 25 августа\",\r\n        newsImage: \"https://www.grekomania.ru/images/places/19/cyclades/santorini/big/88316_Famous-Santorini-sunset-3.jpg\",\r\n        date: \"28 июля\"\r\n    },\r\n        {id: 3, newsName: \"Дорогое шампанское будет литься рекой на прощальном костре!\",\r\n        newsImage: \"https://www.grekomania.ru/images/places/19/cyclades/santorini/big/88316_Famous-Santorini-sunset-3.jpg\",\r\n        date: \"28 июля\"   \r\n    },\r\n    ],\r\n    \r\n}\r\nconst newsReducer = (state=initialNewsPage,action) => {\r\n    switch(action.type) { \r\n        case GET_NEWS: \r\n            return ({\r\n                news: action.news,\r\n                ...state,\r\n            })\r\n        default: {\r\n            return state}}}\r\n\r\n\r\nexport const getNews = (news) => {\r\n    return null\r\n}\r\n\r\nexport default newsReducer","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport navigationReducer from './navigation-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer'\r\nimport appReducer from './app-reducer'\r\nimport newsReducer from './news-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navigation: navigationReducer,\r\n    usersPage: usersReducer,\r\n    newsPage: newsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\nreturn (<header className={styles.header}>\r\n        {props.userData.isAuth?\r\n        <div>\r\n        <span>{props.userData.login}</span><button onClick={props.logout} className={styles.button_logout}>Выйти</button></div>:\r\n        <NavLink to={'/login'}>Войти</NavLink>}\r\n        \r\n        </header>)}\r\nexport default Header;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Header from './Header'\r\nimport {setAuthUserDataThunk} from '../../redux/auth-reducer'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\n\r\nclass HeaderAPIComponent extends React.Component {\r\n\r\nrender() {\r\n        return (<Header {...this.props}/>)\r\n}}\r\nlet mapStateToProps = (state) => {\r\n        return(\r\n        {userData: state.auth}\r\n        )\r\n}\r\nlet HeaderContain = connect(mapStateToProps, {setAuthUserDataThunk,logout})(HeaderAPIComponent)\r\nexport default HeaderContain;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport load from '../../../assets/images/load.gif'\r\n\r\nconst Preloader = (props) => {\r\n    return (<img className={styles.preloader} src={load} />)\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport style from './BestFriends.module.css';\r\nimport Preloader from './../common/Preloader/Preloader'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from \"react-router\";\r\nimport {connect} from \"react-redux\"\r\nimport {getUserStatusThunk, setUserProfileThunk} from \"../../redux/profile-reducer\"\r\n\r\nconst BestFriends = (props) => {\r\n    return (\r\n    <div className={style.bestfriends}>\r\n    {props.bestFriends.length!==0?\r\n    <section className={style.bestfriends_persons}>\r\n          <p>Друзья</p>\r\n          <ul>\r\n          <li><NavLink onClick={()=>{\r\n                props.setUserProfileThunk(props.bestFriends[0].id)\r\n                props.getUserStatusThunk(props.bestFriends[0].id)\r\n                }} to={`/profile/${props.bestFriends[0].id}`}>{props.bestFriends[0].name}</NavLink></li>\r\n          <li><NavLink onClick={()=>{props.setUserProfileThunk(props.bestFriends[1].id)\r\n                                     props.getUserStatusThunk(props.bestFriends[1].id)\r\n      }} to={`/profile/${props.bestFriends[1].id}`}>{props.bestFriends[1].name}</NavLink></li>\r\n          <li><NavLink onClick={()=>{props.setUserProfileThunk(props.bestFriends[2].id)\r\n      props.getUserStatusThunk(props.bestFriends[2].id)\r\n      }} to={`/profile/${props.bestFriends[2].id}`}>{props.bestFriends[2].name}</NavLink></li>\r\n          </ul>\r\n    </section>:<Preloader />} \r\n    </div>)}\r\n\r\n\r\nconst BestFriendsContain = connect(null,{getUserStatusThunk,setUserProfileThunk})(BestFriends)\r\n\r\nconst BestFriendsWithRouter = withRouter(BestFriendsContain)\r\n\r\nexport default BestFriendsWithRouter","import React from 'react';\r\nimport classes from './Navigation.module.css';\r\nimport BestFriendsWithRouter from './BestFriends'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Navigation extends React.Component {\r\n  componentWillMount() {\r\n  this.props.getFirstThreeUsers()\r\n}\r\nrender(){\r\n\r\nreturn (<nav className={classes.nav}>\r\n<ul>\r\n  <li><NavLink to=\"/profile\" className={classes.navigation} activeClassName={classes.active}>Профиль</NavLink></li>\r\n  <li><NavLink to=\"/news\" className={classes.navigation}>Новости</NavLink></li>\r\n  <li><NavLink to=\"/dialogs\" className={classes.navigation} activeClassName={classes.active}>Сообщения</NavLink></li>\r\n  <li><NavLink to=\"\" className={classes.navigation}>Документы</NavLink></li>\r\n  <li><NavLink to=\"\" className={classes.navigation}>Информация</NavLink></li>\r\n  <li><NavLink to=\"/users\" className={classes.navigation}>Пользователи</NavLink></li>\r\n</ul>\r\n  <BestFriendsWithRouter bestFriends={this.props.bestFriends} />\r\n</nav>)}}\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation'\r\nimport {connect} from 'react-redux'\r\nimport {getFirstThreeUsers} from '../../redux/users-reducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {bestFriends: state.usersPage.firstThreeUsers}}\r\n\r\nconst NavigationContain = connect(mapStateToProps,{getFirstThreeUsers})(Navigation)\r\n\r\nexport default NavigationContain;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nconst Users = (props) => {\r\n        return (\r\n        <div className={styles.usersPage}>\r\n        <div>{props.usersList}</div>\r\n        </div>\r\n        )}\r\nexport default Users;","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n    return (\r\n    <section className={styles.user}>\r\n    <div className={styles.user__image}>\r\n        <figure>\r\n        <NavLink className={styles.user__image__avatar} to={`/profile/${props.userData.id}`}>\r\n        <img src={props.userData.image === undefined ? \"https://i.pinimg.com/236x/19/93/93/1993934932cca30fa70f3ffed2a62479--justin-bieber-quotes-swag.jpg\" : props.userData.image  } alt=\"love\"/>\r\n        </NavLink> \r\n        </figure>\r\n            {props.userData.followed?\r\n            <button disabled={props.followingInProgress.some(id => id===props.userData.id)} \r\n            className={styles.button + ' ' + styles.button_unfollow} \r\n            onClick={() => {props.unFollowThunk(props.userData.id)}}>Отписаться</button>\r\n            :\r\n            <button disabled={props.followingInProgress.some(id => id===props.userData.id)} \r\n            className={styles.button + ' ' + styles.button_follow} \r\n            onClick={()=>{props.followThunk(props.userData.id)\r\n            }}>Подписаться</button>}\r\n    </div>\r\n    <div className={styles.user__body} key={props.userData.id}>\r\n        <p>{props.userData.name}</p>\r\n        <span>LA, </span>\r\n        <span>USA</span>\r\n        <p>{props.userData.id}</p>\r\n        <p>{props.userData.status}</p>\r\n    </div>\r\n    </section>\r\n    )\r\n}\r\n/*<section className={classes.user}>\r\n<div className={classes.user__image}>\r\n    <figure>\r\n        <img src={props.userData.image} alt=\"love\"/>\r\n    </figure>\r\n    {props.userData.followed ? \r\n    <button className={classes.button + ' ' + classes.button_unfollow} onClick={() => {props.unfollow(props.userData.id)}}>Отписаться</button> : \r\n    <button className={classes.button + ' ' + classes.button_follow} onClick={()=>{props.follow(props.userData.id)}}>Подписаться</button>}\r\n</div>\r\n<div className={classes.user__body} key={props.userData.id}>\r\n    <p>{props.userData.name}</p>\r\n    <span>{`${props.userData.location.city}, `}</span>\r\n    <span>{props.userData.location.country}</span>\r\n    <p>{props.userData.status}</p>\r\n</div>\r\n</section>*/\r\n      /*props.toggleFollowingInProgress(true,props.userData.id)\r\n            getUsersAPI.unFollowUser(props.userData.id).then(res=>{\r\n        if (res.resultCode==0){\r\n            props.unfollow(props.userData.id)\r\n            }\r\n            props.toggleFollowingInProgress(false,props.userData.id)\r\n        })*/\r\n/*props.toggleFollowingInProgress(true,props.userData.id)\r\n            getUsersAPI.followUser(props.userData.id).then(res=>{\r\n            if (res.resultCode==0){\r\n                props.follow(props.userData.id)\r\n            }\r\n            props.toggleFollowingInProgress(false,props.userData.id)         \r\n    })*/\r\nexport default User;","import React from 'react';\r\nimport style from './Pagination.module.css';\r\nimport {useState} from 'react'\r\n\r\nconst Pagination = (props) => {\r\n    let pagesCount = Math.ceil(props.totalCount/props.pageSize)\r\n    let pages = [];\r\n    for (let i=1; i <=pagesCount; i++){\r\n        pages.push(i)}\r\n    let pagesLength = pages.length\r\n    let numberOfParts = Math.ceil(pagesLength/props.displayingElelements)\r\n    const[leftBorder,setLeftBorder] = useState(1)\r\n    const[rightBorder,setRightBorder] = useState(props.displayingElelements)\r\n    const[pagesPart,setPagesPart] = useState(1) \r\n    return <div className={style.pagination}>\r\n    {pagesPart>1?<button onClick={()=>{setLeftBorder(leftBorder-props.displayingElelements) \r\n                          setRightBorder(rightBorder-props.displayingElelements)\r\n                          setPagesPart(pagesPart-1)\r\n                          props.onPageChanged(leftBorder+1)\r\n                          }} className={style.button}>Назад</button>:null}\r\n    {pages.slice(leftBorder-1,rightBorder).map(page=><span onClick={(e)=>{props.onPageChanged(page)}} className={props.currentPage===page&&style.activePage}>{`${page} `}</span>)}\r\n    {pagesPart<numberOfParts?<button onClick={()=>{\r\n                          setLeftBorder(rightBorder+1) \r\n                          setRightBorder(rightBorder+props.displayingElelements)\r\n                          setPagesPart(pagesPart+1)\r\n                          props.onPageChanged(rightBorder+1)\r\n                          }} className={style.button}>Далее</button>:null}\r\n    </div>\r\n    }\r\n    \r\nexport default Pagination;","import {createSelector} from 'reselect'\r\n\r\nexport const getAllUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getAllUsers = createSelector(getAllUsersSelector, (users) => {\r\n    return users.filter(u=>u.id>1436)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {follow, unfollow, setCurrentPage,toggleFollowingInProgress,getUsers,followThunk,unFollowThunk} from './../../redux/users-reducer'\r\nimport {connect} from 'react-redux'\r\nimport Users from './Users'\r\nimport User from './User/User';\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport Pagination from '../common/Pagination/Pagination'\r\nimport {getAllUsers,getPageSize,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress} from '../../redux/users-selectors'\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  \r\n        componentDidMount() {\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize)}\r\n        onPageChanged = (page) => {\r\n            this.props.setCurrentPage(page)\r\n            this.props.getUsers(page, this.props.pageSize)\r\n        }\r\n        render() {\r\n            let usersList = this.props.users.map(\r\n                user=>{\r\n                return (<User userData={user} toggleFollowingInProgress={this.props.toggleFollowingInProgress} followingInProgress={this.props.followingInProgress} followThunk={this.props.followThunk} unFollowThunk={this.props.unFollowThunk} follow={this.props.follow} unfollow={this.props.unfollow}/>)})\r\n                \r\n            return(<>\r\n            {this.props.isFetching?<Preloader />:null} \r\n            <Pagination totalCount={this.props.totalUsersCount} pageSize={this.props.pageSize} currentPage={this.props.currentPage} onPageChanged={this.onPageChanged} displayingElelements={this.props.displayingUsers}/>\r\n            <Users usersList={usersList}/>\r\n                </>\r\n            )\r\n        }}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { \r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        displayingUsers: state.usersPage.displayingUsers\r\n}}\r\n\r\nconst UsersContain = connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage, \r\n    toggleFollowingInProgress, getUsers,\r\n    followThunk, unFollowThunk})(UsersAPIComponent)\r\n\r\nexport default UsersContain;\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n        return {\r\n        follow: (userID) => {dispatch(followAC(userID))},\r\n        unfollow: (userID) => {dispatch(unfollowAC(userID))},\r\n        setUsers: (users) => {dispatch(setUsersAC(users))},\r\n        setCurrentPage: (page) => {dispatch(setCurrentPageAC(page))},\r\n        setTotalUsers: (totalUsers) => {dispatch(setTotalUsersAC(totalUsers))},\r\n        setIsFetching: (isFetching)=>{dispatch(setIsFetchingAC(isFetching))}\r\n}}*/\r\n  /*this.props.setIsFetching(true)    \r\n            getUsersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data=>{\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n            data.totalCount>100?this.props.setTotalUsers(55):this.props.setTotalUsers(data.totalCount)})*/\r\n    /*\r\n            this.props.setIsFetching(true) \r\n                getUsersAPI.getUsers(page,this.props.pageSize).then(\r\n                    data=>{\r\n                        this.props.setIsFetching(false)\r\n                        this.props.setUsers(data.items)  \r\n                    }\r\n                )*/","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n        return (\r\n            <div className={styles.post_wrapper}>\r\n                <p>{props.name}</p>\r\n                <p>{props.message}</p> \r\n                <button className={styles.button + ' ' + styles.like}>Like</button>\r\n                <button className={styles.button + ' ' + styles.dislike}>Dislike</button>\r\n            </div>)\r\n    } \r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field, Form} from 'redux-form'\r\nimport {required,maxLengthCreator} from '../../../utils/validation/validation.js'\r\nimport {Textarea} from '../../../components/common/ValidationForms/ValidationForms'\r\n\r\nlet maxLengthCreatorValidate = maxLengthCreator(40)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return  <Form onSubmit={props.handleSubmit}>\r\n                <Field rows='8' validate={[required,maxLengthCreatorValidate]} className={classes.posts__textarea} className={classes.posts__textarea} placeholder={props.newPostText} name={\"sendNewPostTextAreaValue\"} component={Textarea}/>\r\n\r\n                <button className={classes.send}>Новый пост</button>\r\n            </Form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'addNewPostForm'})(AddNewPostForm)\r\n\r\n\r\nconst Posts = (props) => {\r\n    let postsElements = props.postsData.map( post=> {\r\n        return(\r\n        <Post name={props.userName} message={post.message} />)\r\n    })\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.sendNewPostTextAreaValue)\r\n    }\r\n    return (\r\n    <div>\r\n    <AddNewPostReduxForm onSubmit={onAddPost} newPostText={props.newPostText}/>\r\n    {postsElements}\r\n    </div>\r\n    )}\r\n    \r\n    export default Posts;","import React from 'react';\r\nimport {addPostCreator} from '../../../redux/profile-reducer'\r\nimport Posts from './Posts'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n        userName: state.auth.login \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n        return {\r\n        addPost: (newPostTextValue) => {dispatch(addPostCreator(newPostTextValue))}\r\n}}\r\n\r\nconst PostsContain = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\nexport default PostsContain;","import React, {useState,useEffect} from 'react'\r\nimport styles from './Status.module.css'\r\n\r\nconst Status = (props) => {\r\n       let stateWithSetState = useState(false); //default local state value\r\n       //let editMode = stateWithSetState[0]; //firts element of array created by useState\r\n       //let setEditMode = stateWithSetState[1]; //second element of array is function\r\n       let [editMode, setEditMode] = stateWithSetState\r\n       let [status, setStatus] = useState(props.status)\r\n       //useEffect works after page render\r\n       //hooks dont use in if else construction and cycles\r\n       useEffect(()=>{\r\n        debugger\r\n       setStatus(props.status)\r\n       },[props.status])\r\n       const activateEditMode = () => \r\n       {\r\n            setEditMode(true)\r\n       } \r\n       const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatusThunk(status)\r\n       } \r\n       const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n       return (\r\n        <section className={styles.status}>\r\n            {!editMode?\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{`${props.status}`}</span>\r\n            </div>\r\n            :\r\n            <div>\r\n                <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true}/>\r\n            </div>}\r\n        </section>)}\r\n\r\nexport default Status","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport Status from './Status/StatusWithHooks'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from \"react-redux\" \r\n\r\nclass ProfileInfo extends React.Component {\r\n    render(){\r\n    if(!this.props.profile){return <Preloader />}\r\n    console.log(this.props)\r\n    return (\r\n        <section className={styles.profileInfo}>\r\n            {this.props.profile.photos.small==null?<img className={styles.profileInfo__avatar} src=\"http://www.galerieserge.ru/pic/ava/noava.png\" alt=\"noAva\"/>:<img className={styles.profileInfo__avatar} src={this.props.profile.photos.small} alt=\"avatar\"/>}\r\n            {this.props.profile.userId!=this.props.autorizedUserId?<p>{this.props.status}</p>:<Status status = {this.props.status} updateStatusThunk={this.props.updateStatusThunk}/>}\r\n            <p>Имя: {this.props.profile.fullName}</p>\r\n            <p>Город: LA, USA</p>\r\n            <p>Возраст: 18 лет</p>\r\n            {this.props.profile.lookingForAJob?<p>Ищу работу с зп от 10k$/mon.</p>:null}   \r\n        </section>\r\n    )\r\n}}\r\n\r\nconst ProfileInfoWithRouter = withRouter(ProfileInfo)\r\n\r\nexport default ProfileInfoWithRouter","import React from 'react';\r\nimport PostsContain from './Posts/PostsContain'\r\nimport ProfileInfoWithRouter from './ProfileInfo/ProfileInfo'\r\nimport style from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n    /*\r\n    if we dont use PureComponent\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps!=this.props||nestState!=this.state\r\n    }*/\r\n    console.log(props)\r\n    return (\r\n    <div>\r\n     <div className={style.profile__hero}></div>\r\n        <ProfileInfoWithRouter userId={props.userId} currentProfile={props.currentProfile} status = {props.status} profile={props.profile} updateStatusThunk={props.updateStatusThunk} autorizedUserId={props.autorizedUserId}/>\r\n        {props.userId==props.autorizedUserId||props.userId==undefined?<PostsContain userName={props.userName}/>:null}\r\n    </div>)}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport Profile from './Profile'\r\nimport {setUserProfile} from '../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport {setUserProfileThunk} from '../../redux/profile-reducer'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {getUserStatusThunk,updateStatusThunk} from '../../redux/profile-reducer'\r\n\r\nclass ProfileContain extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId=this.props.match.params.userId\r\n            if (!userId) {\r\n                userId=this.props.autorizedUserId\r\n                if(!userId) {\r\n                    this.props.history.push('/login')\r\n                }\r\n            }\r\n            this.props.setUserProfileThunk(userId)\r\n            this.props.getUserStatusThunk(userId)\r\n            \r\n    }\r\n    render() {\r\n        return <Profile setUserProfileThunk={this.props.setUserProfileThunk} userId={this.props.match.params.userId} profile={this.props.profile} status={this.props.status} updateStatusThunk={this.props.updateStatusThunk} currentProfile={this.props.currentProfile} autorizedUserId={this.props.autorizedUserId}/> \r\n        \r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    currentProfile: state.usersPage.currentProfile\r\n    })\r\n\r\nexport default compose(connect(mapStateToProps,{setUserProfile,getUserStatusThunk,updateStatusThunk,setUserProfileThunk}),withRouter,withAuthRedirect)(ProfileContain);","import React from 'react'\r\nimport style from './Login.module.css'\r\nimport {reduxForm, Field, Form} from 'redux-form'\r\nimport {Input} from '../common/ValidationForms/ValidationForms'\r\nimport {required,maxLengthCreator} from '../../utils/validation/validation'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nlet maxLengthCreatorValidate = maxLengthCreator(40)\r\n\r\nconst LoginForm = (handleSubmit,error) => {\r\n    console.log(error)\r\n        return (\r\n            <Form className={style.loginForm} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field validate={[required,maxLengthCreatorValidate]} placeholder={'Логин'} name={\"email\"} component={Input}/> \r\n            </div>\r\n            <div>\r\n                <Field validate={[required,maxLengthCreatorValidate]} placeholder={'Пароль'} name={\"password\"} type={\"password\"} component={Input}/> \r\n            </div>\r\n            <div>\r\n                <Field validate={[required,maxLengthCreatorValidate]} type={'checkbox'} name={'rememberMe'} component={'input'}/>Запомнить\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Войти</button>\r\n            </div>\r\n            {Object.keys(error).length != 0 && error&&<span>{`${error}`}</span>}\r\n        </Form>\r\n        )\r\n    }\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nclass LoginContain extends React.Component {\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.email,formData.password,formData.rememberMe)\r\n    }\r\n    render(){\r\n        return(this.props.isAuth?\r\n            <Redirect to=\"/profile\" />\r\n            :\r\n        <section>\r\n            <h1 className={style.login__name}>Авторизация</h1>\r\n            <LoginReduxForm onSubmit={this.onSubmit}/>\r\n            <p className={style.notLogined}>Вы не залогинены</p>\r\n        </section>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps,{login})(LoginContain)","import React from 'react'\r\nimport style from './Commentary.module.css'\r\n\r\nconst Commentary = (props) => {\r\n    return (<section>\r\n\r\n           </section>)\r\n}\r\nexport default Commentary","import React from 'react'\r\nimport style from './LatestComments.module.css'\r\nimport Commentary from './Commentary/Commentary'\r\n\r\nconst LatestComments = (props) => {\r\n    return (<aside className={style.sidebar}>\r\n           <Commentary />\r\n           </aside>)\r\n}\r\nexport default LatestComments","import React from \"react\"\r\nimport style from \"./News.module.css\"\r\nimport {reduxForm, Field, Form} from 'redux-form'\r\nimport {required,maxLengthCreator} from '../../../utils/validation/validation.js'\r\nimport {Textarea} from '../../../components/common/ValidationForms/ValidationForms'\r\n\r\nlet maxLengthCreatorValidate = maxLengthCreator(40)\r\n\r\nconst AddNewsCommentaryForm = (props) => {\r\n    return  <Form onSubmit={props.handleSubmit}>\r\n                <Field rows='8' validate={[required,maxLengthCreatorValidate]} name={\"addNewsСommentaryForm\"} component={Textarea} className={style.news__commentary}/>\r\n                <button className={style.button}>Комментировать</button>\r\n            </Form>\r\n}\r\n\r\nconst AddNewsCommentaryReduxForm = reduxForm({form: 'addNewsСommentaryForm'})(AddNewsCommentaryForm)\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={style.news}>\r\n        <h3 className={style.news__name}>{props.newsDataToNewsComponent.newsName}</h3>\r\n        <p className={style.news__date}>{props.newsDataToNewsComponent.date}</p>\r\n        <img src={props.newsDataToNewsComponent.newsImage} alt=\"\"/>\r\n        <p>{props.newsDataToNewsComponent.newsText}</p>\r\n        <AddNewsCommentaryReduxForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from \"react\"\r\nimport style from \"./NewsList.module.css\"\r\nimport News from \"./News/News\"\r\nimport {connect} from 'react-redux'\r\nimport getNews from \"../../redux/news-reducer\"\r\n\r\nconst NewsList = ({newsList}) => {\r\n    let newsListToRender = newsList.map(newsData=><News newsDataToNewsComponent={newsData} />)\r\n    return (\r\n        <section>\r\n            {newsListToRender}\r\n        </section>\r\n)}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newsList: state.newsPage.newsData\r\n    }\r\n    \r\n}\r\n\r\nconst NewsListContain = connect(mapStateToProps,{getNews})(NewsList)\r\n\r\nexport default NewsListContain","import React from 'react';\r\nimport './App.css';\r\nimport HeaderAPIComponent from \"./components/Header/HeaderContain\"\r\nimport NavigationContain from './components/Navigation/NavigationContain';\r\n//import DialogsContain from './components/Dialogs/DialogsContain';\r\nimport UsersContain from './components/Users/UsersContain'\r\nimport {Route} from 'react-router-dom'\r\nimport ProfileContain from './components/Profile/ProfileContain';\r\nimport LoginContain from './components/Login/LoginContain'\r\nimport {connect} from 'react-redux'\r\nimport {setAuthUserDataThunk} from './redux/auth-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport LatestComments from \"./components/Sidebar/LatestComments\"\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport {initializedApp} from './redux/app-reducer'\r\nimport NewsListContain from './components/News/NewsListContain'\r\nconst DialogsContain = React.lazy(() => import(\"./components/Dialogs/DialogsContain\"))\r\n\r\nclass App extends React.Component{\r\n    componentDidMount() {\r\n\r\n      this.props.initializedApp()\r\n  }\r\n  render(){\r\n  if (!this.props.initialized) {\r\n  \r\n    return <Preloader />\r\n  }\r\n  else {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <HeaderAPIComponent />\r\n      <NavigationContain />\r\n      <LatestComments />\r\n        <div className='content'>\r\n        <Route path='/news' render={ ()=> <NewsListContain /> } /> \r\n        <Route path='/profile/:userId?' render={ ()=> <ProfileContain /> } />\r\n        <Route path='/dialogs' render={ ()=> {return (<React.Suspense fallback={<div>Loading...</div>}>\r\n          <DialogsContain />\r\n        </React.Suspense>)\r\n        }} />\r\n        <Route path='/users' render={ ()=> <UsersContain /> } />\r\n        <Route path='/login' render={ ()=> <LoginContain/> } />\r\n      </div>\r\n      </div>\r\n    )\r\n}}}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n    initialized: state.app.initialized\r\n  })\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {setAuthUserDataThunk,initializedApp}),withRouter)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\n\n    ReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n    <App/>\n    </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1OvkS\",\"navigation\":\"Navigation_navigation__3Js7I\",\"active\":\"Navigation_active__34t9R\",\"bestfriends\":\"Navigation_bestfriends__3w8z0\",\"bestfriends_persons\":\"Navigation_bestfriends_persons__3OR6E\",\"bestfriend\":\"Navigation_bestfriend__2rIVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3q4nr\",\"user__image\":\"User_user__image__2ZCe4\",\"user__image__avatar\":\"User_user__image__avatar__3CFXB\",\"user__body\":\"User_user__body__1VVZb\",\"button\":\"User_button__16tv0\",\"button_follow\":\"User_button_follow__2Pzf7\",\"button_unfollow\":\"User_button_unfollow__3vHG3\"};","import React from 'react'\r\nimport styles from './ValidationForms.module.css'\r\nimport {reduxForm, Field, Form} from 'redux-form'\r\n\r\nexport const Textarea = ({input,meta,child,...props}) => {\r\n    {if (meta.touched && meta.error===\"Required\")\r\n    {return <div className={styles.textarea + ' ' + styles.textarea_zeroValueError}>\r\n    <textarea {...input}{...props} />\r\n     </div>}\r\n     else if (meta.touched && meta.error===\"Max length error\"){\r\n    return <div className={styles.textarea + ' ' + styles.textarea_maxLengthError}>\r\n    <textarea {...input}{...props} />\r\n     </div>\r\n     }\r\n    else {return <div className={styles.textarea}>\r\n    <textarea {...input}{...props} />\r\n    </div>}\r\n    }  \r\n}\r\n\r\n\r\n\r\n    export const Input = ({input,meta,...props}) => {\r\n        {if (meta.touched && meta.error===\"Required\")\r\n        {return <div className={styles.textarea + ' ' + styles.textarea_zeroValueError}>\r\n        <input  {...input} {...props}/>\r\n         </div>}\r\n         else if (meta.touched && meta.error===\"Max length error\"){\r\n        return <div className={styles.textarea + ' ' + styles.textarea_maxLengthError}>\r\n        <input  {...input} {...props}/>\r\n         </div>\r\n         }\r\n        else {return <div className={styles.textarea}>\r\n        <input  {...input} {...props}/>\r\n        </div>}\r\n        }  \r\n    }\r\nexport const CreateField = (required,placeholder,name,component) => {\r\n    return <Field validate={required} placeholder={'login'} name={\"email\"} component={Input}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Post_button__1ZFVu\",\"like\":\"Post_like__3-BVi\",\"post_wrapper\":\"Post_post_wrapper__26VDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1MMjj\",\"button\":\"News_button__9Mspn\",\"news__commentary\":\"News_news__commentary__2OBmo\",\"news__name\":\"News_news__name__3_Yxd\",\"news__date\":\"News_news__date__1FKI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Pagination_activePage__PC0mX\",\"button_showMore\":\"Pagination_button_showMore__Sjwvr\",\"pagination\":\"Pagination_pagination__27Ui1\",\"button\":\"Pagination_button__3xVeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"send\":\"Posts_send__1gYtD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1mX-P\",\"profileInfo__avatar\":\"ProfileInfo_profileInfo__avatar__36luA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__2Dgdo\",\"notLogined\":\"Login_notLogined__3fsNd\",\"login__name\":\"Login_login__name__3WIWX\"};","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){ \r\n        if (!this.props.isAuth) return <Redirect to = {'/login'} />\r\n        return <Component {...this.props} />\r\n    }}\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3necD\",\"button_logout\":\"Header_button_logout__3C263\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bestfriends\":\"BestFriends_bestfriends__2hB2m\"};"],"sourceRoot":""}